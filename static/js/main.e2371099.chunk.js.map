{"version":3,"sources":["carousel.js","RandomNumbers.js","Answer.js","questions.js","movies.js","App.js","serviceWorker.js","index.js"],"names":["Carousel","props","pictures","movie","slice","state","imgDisplayed","this","className","onClick","setState","prevImage","length","nextImage","pic","i","key","src","alt","map","renderImage","prevButton","nextButton","React","Component","RandomNumbers","movieId","ranNums","id","Math","floor","random","indexOf","push","Answer","window","location","reload","answer","title","director","name","actor","actors","character","year","answerForTitle","answerForDirector","answerForActor","answerForCharacter","answerForYear","refreshPage","Questions","questions","display","randomOptions","answerFor","movies","maxId","concat","sort","nextQuestion","valueFor","Object","keys","renderQuestion","Movies","round","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e2371099.chunk.js","sourcesContent":["import React from 'react';\nimport './carousel.css'\n\nclass Carousel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.pictures = this.props.movie.pictures.slice(0,5)\n    this.state = {\n      imgDisplayed: 0\n    }\n  };\n\n  prevImage() {\n    return this.state.imgDisplayed - 1\n  };\n\n  prevButton() {\n    if (this.state.imgDisplayed !== 0) {\n      return <span className=\"prev\" onClick={() => this.setState({imgDisplayed: this.prevImage()})}>&laquo;</span>\n    }\n  };\n\n  nextImage() {\n    return this.state.imgDisplayed + 1\n  };\n\n  nextButton() {\n    if (this.state.imgDisplayed < this.pictures.length - 1) {\n      return <span className=\"next\" onClick={() => this.setState({imgDisplayed: this.nextImage()})}>&raquo;</span>\n    }\n  };\n\n  renderImage(pic, i) {\n    return (\n      <figure key={i} className={i === this.state.imgDisplayed ? 'show' : 'hide'}>\n        <img className=\"center responsive\" src={pic.src} alt=\"\" />\n      </figure>\n    )\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"slideshow\">\n          {this.pictures.map((pic, i) => this.renderImage(pic, i))}\n        </div>\n        {this.prevButton()}\n        {this.nextButton()}\n      </div>\n    )\n  };\n}\n\nexport default Carousel;","function RandomNumbers(movieId, length) {\n  var ranNums = []\n  var i = 3\n  while (i !== 0) {\n    var id = Math.floor(Math.random() * (length+1))\n    if (id !== movieId && ranNums.indexOf(id) === -1) {\n      i--\n      ranNums.push(id);\n    }\n  }\n  return ranNums\n}\nexport default RandomNumbers;","import React from 'react';\nimport './Answer.css'\n\nclass Answer extends React.Component {\n  refreshPage() {\n    window.location.reload(false);\n  }\n\n  answerForTitle() {\n    return <h4 className={this.props.answer.title == this.props.movie.title ? 'right' : 'wrong'}>{this.props.answer.title}</h4>\n  }\n\n  answerForDirector() {\n    return <h4 className={this.props.answer.director == this.props.movie.director.name ? 'right' : 'wrong'}>{this.props.movie.director.name}</h4>\n  }\n\n  answerForActor() {\n    return <h4 className={this.props.answer.actor == this.props.movie.actors[0].name ? 'right' : 'wrong'}>{this.props.movie.actors[0].name}</h4>\n  }\n\n  answerForCharacter() {\n    return <h4 className={this.props.answer.character == this.props.movie.actors[0].character ? 'right' : 'wrong'}>{this.props.movie.actors[0].character}</h4>\n  }\n\n  answerForYear() {\n    return <h4 className={this.props.answer.year == this.props.movie.year ? 'right' : 'wrong'}>{this.props.movie.year}</h4>\n  }\n\n  render() {\n    return (\n      <div className=\"center\">\n        <h3 className=\"question\">Respostas</h3>\n        {this.answerForTitle()}\n        {this.answerForDirector()}\n        {this.answerForActor()}\n        {this.answerForCharacter()}\n        {this.answerForYear()}\n        <p>\n          <button className=\"start\" onClick={() => this.refreshPage()}>Jogar Novamente</button>\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default Answer;","import React from 'react';\nimport './questions.css'\nimport RandomNumbers from './RandomNumbers';\nimport Answer from './Answer.js';\n\nclass Questions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.questions = {\n      title: \"Qual o nome do filme?\",\n      director: \"Quem dirigiu o filme?\",\n      actor: \"Qual ator/atriz participou?\",\n      character: \"Qual o nome da personagem?\",\n      year: \"Em que ano foi produzido?\"\n    }\n    this.state = { display: 'title' }\n  }\n\n  renderQuestion(key) {\n    if (this.state.display === key) {\n      return (\n        <div className=\"center options\" key={key}>\n          <h3 className=\"question\">{this.questions[key]}</h3>\n          {this.randomOptions().map(id => this.answerFor(this.props.movies[id], key))}\n        </div>\n      )\n    }\n  }\n\n  randomOptions() {\n    return RandomNumbers(this.props.movieId, this.props.maxId).concat(this.props.movieId).sort()\n  }\n\n  answerFor(movie, key) {\n    return (\n      <p>\n        <button className=\"start\" onClick={() => this.setState({display: this.nextQuestion(key), [key]: this.valueFor(movie, key)})}>\n          {this.valueFor(movie, key)}\n        </button>\n      </p>\n    )\n  }\n\n  valueFor(movie, key) {\n    switch(key) {\n      case 'title': return movie.title;\n      case 'director': return movie.director.name;\n      case 'actor': return movie.actors[0].name;\n      case 'character': return movie.actors[0].character;\n      case 'year': return movie.year;\n    }\n  }\n\n  nextQuestion(key) {\n    switch(key) {\n      case 'title': return 'director';\n      case 'director': return 'actor';\n      case 'actor': return 'character';\n      case 'character': return 'year';\n      default: return 'answer';\n    }\n  }\n\n  render() {\n    if (this.state.display == 'answer') {\n      return <Answer movie={this.props.movies[this.props.movieId]} answer={this.state}/>\n    } else {\n      return Object.keys(this.questions).map(key => this.renderQuestion(key))\n    }\n  }\n}\n\nexport default Questions;","import React from 'react';\nimport movies from './movies.json';\nimport Carousel from './carousel.js'\nimport Questions from './questions';\n\nclass Movies extends React.Component {\n  constructor(props) {\n    super(props);\n    this.length = movies.length\n    this.movieId = Math.round(Math.random() * this.length)\n  }\n\n  render() {\n    return (\n      <div>\n        <Carousel movie={movies[this.movieId]} />\n        <Questions movies={movies} movieId={this.movieId} maxId={this.length - 1} />\n      </div>\n    )\n  };\n}\n\nexport default Movies;","import React from 'react';\nimport './App.css';\nimport Movies from './movies.js'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1 className=\"center\">\n          Quiz Movie\n        </h1>\n        <div>\n          <Movies />\n        </div>\n      </div>\n    )\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}